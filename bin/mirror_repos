#! /usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

mirror_repos() {
  local data_file="$1"
  local target_dir="$2"

  local repo_specs
  repo_specs="$( get_repo_specs "$data_file" )"
  mapfile -t repo_specs <<< "$repo_specs"

  mkdir -p "$target_dir"
  pushd "$target_dir"

  local repo_spec
  for repo_spec in "${repo_specs[@]}"; do
    mirror_repo "$repo_spec"
  done
}

mirror_repo() {
  local repo_spec="$1"

  local name
  local owner
  local url

  owner="$( cut -d ' ' -f 1 <<< "$repo_spec" )"
  name="$( cut -d ' ' -f 2 <<< "$repo_spec" )"
  url="$( cut -d ' ' -f 3 <<< "$repo_spec" )"

  local dir="${owner}/${name}.git"
  mkdir -p "$dir"
  git clone --mirror "$url" "$dir"
}

get_repo_specs() {
  local data_file="$1"

  jq \
    --raw-output \
    --exit-status \
    '.[] | "\(.owner.login) \(.name) \(.ssh_url)"' "$data_file"
}

repo_data_file="${1:-}"
target_dir="${2:-}"

if [[ -z "$repo_data_file" || -z "$target_dir" ]]; then
  echo "USAGE: $0 <data-file>"
  exit 1
fi

repo_data_file="$( realpath "$repo_data_file" )"

if [[ ! -s "$repo_data_file" ]]; then
  echo "Data file does not exist: $repo_data_file"
fi

mirror_repos "$repo_data_file" "$target_dir"

